{"remainingRequest":"/Users/jmason/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jmason/vue-app/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/jmason/vue-app/src/App.vue","mtime":1586191494771},{"path":"/Users/jmason/vue-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jmason/vue-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jmason/vue-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jmason/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jmason/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpidXR0b24gewogIGJhY2tncm91bmQ6ICMwMDk0MzU7CiAgYm9yZGVyOiAxcHggc29saWQgIzAwOTQzNTsKfQoKLnNtYWxsLWNvbnRhaW5lciB7CiAgbWF4LXdpZHRoOiA2ODBweDsKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\" class=\"small-container\">\n    <h1>Employees</h1>\n\n    <employee-form @add:employee=\"addEmployee\" />\n    <employee-table :employees=\"employees\" @delete:employee=\"deleteEmployee\" @edit:employee=\"editEmployee\"/>\n  </div>\n</template>\n\n<script>\nimport EmployeeTable from \"@/components/EmployeeTable\";\nimport EmployeeForm from \"@/components/EmployeeForm\";\n\nexport default {\n  name: 'App',\n  components: {\n    EmployeeTable,\n    EmployeeForm\n  },\n  data() {\n    return {\n      employees: [\n        {\n          id: 1,\n          name: 'Michael Scott',\n          email: 'mscott@dundermifflin.com'\n        },\n        {\n          id: 2,\n          name: 'Jim Halpert',\n          email: 'jhalpert@dundermifflin.com'\n        },\n        {\n          id: 3,\n          name: 'Pam Beesly',\n          email: 'pbeesly@dundermifflin.com'\n        }\n      ]\n    }\n  },\n  mounted() {\n    this.getEmployees()\n  },\n  methods: {\n    async getEmployees() {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\n        const allEmployees = await response.json();\n        this.employees = allEmployees;\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    async addEmployee(employee) {\n      try {\n        const response = await fetch(`https://jsonplaceholder.typicode.com/users`, {\n          method: 'POST',\n          body: JSON.stringify(employee),\n          headers: { 'Content-type': 'application/json; charset=UTF-8' }\n        });\n        const newEmployee = await response.json();\n        this.employees = [...this.employees, newEmployee];\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    async deleteEmployee(employeeId) {\n      try {\n        await fetch(`https://jsonplaceholder.typicode.com/users/${employeeId}`, {\n          method: 'DELETE'\n        });\n        this.employees = this.employees.filter(\n            employee => employee.id != employeeId\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    async editEmployee(employeeId, updatedEmployee) {\n      try {\n        const response = await fetch(`https://jsonplaceholder.typicode.com/users/${employeeId}`, {\n          method: 'PUT',\n          body: JSON.stringify(updatedEmployee),\n          headers: { 'Content-type': 'application/json; charset=UTF-8'}\n        });\n        const updatedEmployeeData = await response.json();\n        this.employees = this.employees.map(\n            employee => employee.id == employeeId ? updatedEmployeeData : employee\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }\n}\n</script>\n\n<style>\n  button {\n    background: #009435;\n    border: 1px solid #009435;\n  }\n\n  .small-container {\n    max-width: 680px;\n  }\n</style>\n"]}]}