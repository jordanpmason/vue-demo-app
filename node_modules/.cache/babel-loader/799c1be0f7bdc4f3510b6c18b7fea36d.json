{"remainingRequest":"/Users/jmason/vue-app/node_modules/babel-loader/lib/index.js!/Users/jmason/vue-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jmason/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jmason/vue-app/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jmason/vue-app/src/App.vue","mtime":1586191494771},{"path":"/Users/jmason/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jmason/vue-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jmason/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jmason/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAUA,OAAA,aAAA,MAAA,4BAAA;AACA,OAAA,YAAA,MAAA,2BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA,aADA;AAEA,IAAA,YAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,CACA;AACA,QAAA,EAAA,EAAA,CADA;AAEA,QAAA,IAAA,EAAA,eAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OADA,EAMA;AACA,QAAA,EAAA,EAAA,CADA;AAEA,QAAA,IAAA,EAAA,aAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OANA,EAWA;AACA,QAAA,EAAA,EAAA,CADA;AAEA,QAAA,IAAA,EAAA,YAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OAXA;AADA,KAAA;AAmBA,GA1BA;AA2BA,EAAA,OA3BA,qBA2BA;AACA,SAAA,YAAA;AACA,GA7BA;AA8BA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,CAAA,4CAAA,CAFA;;AAAA;AAEA,gBAAA,QAFA;AAAA;AAAA,uBAGA,QAAA,CAAA,IAAA,EAHA;;AAAA;AAGA,gBAAA,YAHA;AAIA,gBAAA,KAAA,CAAA,SAAA,GAAA,YAAA;AAJA;AAAA;;AAAA;AAAA;AAAA;AAMA,gBAAA,OAAA,CAAA,KAAA;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,KATA;AAUA,IAAA,WAVA,uBAUA,QAVA,EAUA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,+CAAA;AACA,kBAAA,MAAA,EAAA,MADA;AAEA,kBAAA,IAAA,EAAA,IAAA,CAAA,SAAA,CAAA,QAAA,CAFA;AAGA,kBAAA,OAAA,EAAA;AAAA,oCAAA;AAAA;AAHA,iBAAA,CAFA;;AAAA;AAEA,gBAAA,QAFA;AAAA;AAAA,uBAOA,QAAA,CAAA,IAAA,EAPA;;AAAA;AAOA,gBAAA,WAPA;AAQA,gBAAA,MAAA,CAAA,SAAA,gCAAA,MAAA,CAAA,SAAA,IAAA,WAAA;AARA;AAAA;;AAAA;AAAA;AAAA;AAUA,gBAAA,OAAA,CAAA,KAAA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA,KAtBA;AAuBA,IAAA,cAvBA,0BAuBA,UAvBA,EAuBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,sDAAA,UAAA,GAAA;AACA,kBAAA,MAAA,EAAA;AADA,iBAAA,CAFA;;AAAA;AAKA,gBAAA,MAAA,CAAA,SAAA,GAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CACA,UAAA,QAAA;AAAA,yBAAA,QAAA,CAAA,EAAA,IAAA,UAAA;AAAA,iBADA,CAAA;AALA;AAAA;;AAAA;AAAA;AAAA;AASA,gBAAA,OAAA,CAAA,KAAA;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,KAlCA;AAmCA,IAAA,YAnCA,wBAmCA,UAnCA,EAmCA,eAnCA,EAmCA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,sDAAA,UAAA,GAAA;AACA,kBAAA,MAAA,EAAA,KADA;AAEA,kBAAA,IAAA,EAAA,IAAA,CAAA,SAAA,CAAA,eAAA,CAFA;AAGA,kBAAA,OAAA,EAAA;AAAA,oCAAA;AAAA;AAHA,iBAAA,CAFA;;AAAA;AAEA,gBAAA,QAFA;AAAA;AAAA,uBAOA,QAAA,CAAA,IAAA,EAPA;;AAAA;AAOA,gBAAA,mBAPA;AAQA,gBAAA,MAAA,CAAA,SAAA,GAAA,MAAA,CAAA,SAAA,CAAA,GAAA,CACA,UAAA,QAAA;AAAA,yBAAA,QAAA,CAAA,EAAA,IAAA,UAAA,GAAA,mBAAA,GAAA,QAAA;AAAA,iBADA,CAAA;AARA;AAAA;;AAAA;AAAA;AAAA;AAYA,gBAAA,OAAA,CAAA,KAAA;;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAjDA;AA9BA,CAAA","sourcesContent":["<template>\n  <div id=\"app\" class=\"small-container\">\n    <h1>Employees</h1>\n\n    <employee-form @add:employee=\"addEmployee\" />\n    <employee-table :employees=\"employees\" @delete:employee=\"deleteEmployee\" @edit:employee=\"editEmployee\"/>\n  </div>\n</template>\n\n<script>\nimport EmployeeTable from \"@/components/EmployeeTable\";\nimport EmployeeForm from \"@/components/EmployeeForm\";\n\nexport default {\n  name: 'App',\n  components: {\n    EmployeeTable,\n    EmployeeForm\n  },\n  data() {\n    return {\n      employees: [\n        {\n          id: 1,\n          name: 'Michael Scott',\n          email: 'mscott@dundermifflin.com'\n        },\n        {\n          id: 2,\n          name: 'Jim Halpert',\n          email: 'jhalpert@dundermifflin.com'\n        },\n        {\n          id: 3,\n          name: 'Pam Beesly',\n          email: 'pbeesly@dundermifflin.com'\n        }\n      ]\n    }\n  },\n  mounted() {\n    this.getEmployees()\n  },\n  methods: {\n    async getEmployees() {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\n        const allEmployees = await response.json();\n        this.employees = allEmployees;\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    async addEmployee(employee) {\n      try {\n        const response = await fetch(`https://jsonplaceholder.typicode.com/users`, {\n          method: 'POST',\n          body: JSON.stringify(employee),\n          headers: { 'Content-type': 'application/json; charset=UTF-8' }\n        });\n        const newEmployee = await response.json();\n        this.employees = [...this.employees, newEmployee];\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    async deleteEmployee(employeeId) {\n      try {\n        await fetch(`https://jsonplaceholder.typicode.com/users/${employeeId}`, {\n          method: 'DELETE'\n        });\n        this.employees = this.employees.filter(\n            employee => employee.id != employeeId\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    async editEmployee(employeeId, updatedEmployee) {\n      try {\n        const response = await fetch(`https://jsonplaceholder.typicode.com/users/${employeeId}`, {\n          method: 'PUT',\n          body: JSON.stringify(updatedEmployee),\n          headers: { 'Content-type': 'application/json; charset=UTF-8'}\n        });\n        const updatedEmployeeData = await response.json();\n        this.employees = this.employees.map(\n            employee => employee.id == employeeId ? updatedEmployeeData : employee\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }\n}\n</script>\n\n<style>\n  button {\n    background: #009435;\n    border: 1px solid #009435;\n  }\n\n  .small-container {\n    max-width: 680px;\n  }\n</style>\n"],"sourceRoot":"src"}]}